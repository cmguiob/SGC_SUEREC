---
title: "Cálculo del factor de erodabilidad K con SoilGrids"
author: "Carlos M. Guío Blanco"
date: "2025-07-15"
format: html
editor:
  markdown:
    wrap: 80
---

Este cuaderno calcula el factor de erodabilidad del suelo **K** (en unidades
métricas: t·ha⁻¹·h·MJ⁻¹·mm⁻¹) a partir de datos de textura y carbono orgánico del 
suelo proporcionados por **SoilGrids**. Se implementan y comparan dos fórmulas 
publicadas. El usuario puede comparar los resultados y decidir cuál utilizar en 
su modelo SDR o de pérdida de suelo.


## 1. Carga de librerías y funciones

```{r setup}
if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(
  here, sf, terra, dplyr, tidyr, ggplot2
)
```

## 2. Lectura del polígono de estudio y definición de CRS

```{r}
# Cargar polígono geojson
poli_estudio <- st_read(here("RUSLE_SoilGrids", "Data", "INP_cuenca_rio_barbas.geojson"))

# Transformar a CRS de SoilGrids (IGH: EPSG 54052)
wkt_igh <- "+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs"
poli_estudio_igh <- st_transform(poli_estudio, wkt_igh)
```

## 3. Descarga y carga de capas de SoilGrids

```{r}
# Usamos función externa para descarga vía GDAL
source(here("RUSLE_SoilGrids", "Scripts", "00_funcion_descarga_soilgrids.R"))

stack_soil <- descargar_soilgrids_stack(
  vars = c("sand", "silt", "clay", "soc", "bdod"),
  depths = c("0-5cm"),
  stats = c("mean"),
  resolucion = c(250, 250),
  ruta_vrt = here("RUSLE_SoilGrids", "Data", "OUT_SoilGrids_vrt")
)

# Recorte al área de estudio
stack_soil_crop <- crop(stack_soil, vect(poli_estudio_igh)) |> 
  mask(vect(poli_estudio_igh))
```

## 4. Conversión de unidades

```{r}
# Extraer y convertir unidades
sand <- stack_soil_crop[["sand_0-5cm_mean"]] / 10  # g/kg → %
silt <- stack_soil_crop[["silt_0-5cm_mean"]] / 10
clay <- stack_soil_crop[["clay_0-5cm_mean"]] / 10
soc  <- stack_soil_crop[["soc_0-5cm_mean"]] / 10  # dg/kg → %
bd   <- stack_soil_crop[["bdod_0-5cm_mean"]] / 100  # cg/cm³ → g/cm³

# Materia orgánica a partir de SOC
om <- soc * 1.724
```


## 1. Ecuación de Renard et al. (1997) vía Dg.

Esta ecuación estima K a partir del **diámetro geométrico medio** (Dg) de las partículas, aplicando una función tipo gaussiana. Es adecuada para suelos donde se dispone de textura completa. Fue reportada por Renard et al. (1997): predicting soil erosion by water: a guide to conservation planning with the Revisited Universal Soil Loss Equation (RUSLE)

📘 Acceso: Renard et al. (1997) - [RUSLE Handbook](https://www.tucson.ars.ag.gov/unit/publications/PDFfiles/717.pdf)

```{r}
# Diámetro medio de cada fracción (μm): arena=1000, limo=26, arcilla=1
log_dg <- (sand * log(1000) + silt * log(26) + clay * log(1)) / 100
dg <- exp(log_dg)

K_renard <- 0.0034 + 0.0405 * exp(-0.5 * ((log(dg) + 1.659) / 0.7101)^2)

plot(K_renard)

writeRaster(K_renard, here::here("RUSLE_SoilGrids", "Scripts", "K_renard_dg.tif"), overwrite = TRUE)
```

## 2. Ecuación de Denardin (1990)

Propone un cálculo de K usando una combinación de variables texturales: fracciones finas y materia orgánica. Es ampliamente utilizada en Brasil y recomendada para suelos tropicales. Se ha aplicado en estudios regionales con SoilGrids.

📘 Referencia: Denardin, J.E. (1990). - [Tese Doutorado USO](https://teses.usp.br/teses/disponiveis/11/11140/tde-20230818-145355/pt-br.php)

```{r}
M <- (silt + sand) * (100 - clay)
K_denardin <- 0.0134 + 0.0027 * M / 10000 - 0.00001 * M^2 / 1e8

plot(K_denardin)

writeRaster(K_denardin, here::here("RUSLE_SoilGrids", "Scripts", "K_denardin.tif"), overwrite = TRUE)
```

## 3. Ecuación de Sharpley & Williams (1990) 

Usada originalmente en el modelo EPIC y luego adoptada en SWAT, esta ecuación permite estimar K usando arena, limo, arcilla y contenido de carbono. Es una de las más sólidas en términos estadísticos para regiones sin datos de estructura del suelo.

📘 Referencia: Sharpley, A.N. & Williams, J.R. (1990). [EPIC-Erosion Productivity Impact Calculator](https://epicapex.tamu.edu/media/h2gkyznv/epicmodeldocumentation.pdf)

```{r}
# Subecuaciones según Anache et al. (2015), adaptadas de Sharpley & Williams
fcsand <- 0.2 + 0.3 * exp(-0.0256 * sand * (1 - silt / 100))
sl_clay <- silt / (clay + silt)
om_term <- 1 - 0.25 * om / (om + exp(3.72 - 2.95 * om))
K_sw <- fcsand * sl_clay^0.3 * om_term

# Conversión a unidades SI
K_sw_SI <- K_sw * 0.1317

plot(K_sw_SI)

writeRaster(K_sw_SI, here::here("RUSLE_SoilGrids", "Scripts","K_sharpley_williams.tif"), overwrite = TRUE)
```

#


