---
title: "C√°lculo del factor de erodabilidad K con SoilGrids"
author: "Carlos M. Gu√≠o Blanco"
date: "2025-07-15"
format: html
editor:
  markdown:
    wrap: 80
---

Este cuaderno calcula el factor de erodabilidad del suelo **K** (en unidades m√©tricas: t¬∑ha‚Åª¬π¬∑h¬∑MJ‚Åª¬π¬∑mm‚Åª¬π) a partir de datos de textura y carbono org√°nico del suelo proporcionados por **SoilGrids**. Se implementan y comparan tres f√≥rmulas publicadas.

El usuario puede definir el √°rea de estudio usando:

- Un **pol√≠gono de referencia** (por ejemplo, una cuenca hidrogr√°fica), que impone el sistema de coordenadas al resultado;
- Un **raster de referencia** (por ejemplo, un DEM), que impone resoluci√≥n, extensi√≥n y alineaci√≥n.

Dependiendo del m√©todo elegido, se reproyecta y recorta el stack de SoilGrids y se calcula **K** como raster alineado al √°rea de estudio. 


## 1. Carga de librer√≠as y funciones

```{r setup}

# Exporta el cuaderno como script plano .R
#knitr::purl("01_rusle_k_SoilGrids.qmd")

if (!requireNamespace("pacman", quietly = TRUE)) install.packages("pacman")
pacman::p_load(
  here,     # manejo de rutas relativas
  sf,       # lectura y transformaci√≥n de vectores espaciales (pol√≠gonos)
  terra,    # manipulaci√≥n de rasteres y an√°lisis espacial
  dplyr,    # manipulaci√≥n de data frames y tuber√≠as
  tidyr,    # transformaci√≥n entre formato ancho/largo
  ggplot2   # visualizaci√≥n de datos (gr√°ficas)
)
```

## 2. Lectura de geometr√≠a del √°rea de estudio 

### 2.1 Lectura de pol√≠gono (si se usa como referencia)

```{r label = lee_poligono}

# Cargar pol√≠gono geojson
#poli_estudio <- st_read(here("RUSLE_SoilGrids", "Data", "INP_cuenca_rio_barbas_3116.geojson"))

```

### 2.2 Lectura de un raster de referencia y definici√≥n de propiedade espaciales del √°rea de studio

```{r label = lee_raster}

dem <- rast(here("RUSLE_SoilGrids", "Data", "INP_dem_rio_barbas_burnt_fill_3116.tif"))

# Extraer propiedades clave del DEM
dem_crs <- crs(dem)
dem_ext <- ext(dem)
dem_res <- res(dem)

plot(dem)
```


## 3. Descarga y carga de capas de SoilGrids

```{r}
# Usamos funci√≥n externa para descarga v√≠a GDAL
source(here("RUSLE_SoilGrids", "Scripts", "00_funcion_descarga_soilgrids.R"))

stack_soil <- descargar_soilgrids_stack(
  vars = c("sand", "silt", "clay", "soc"),
  depths = c("0-5cm"),
  stats = c("mean"),
  resolucion = c(250, 250),
  ruta_vrt = here("RUSLE_SoilGrids", "Data", "OUT_SoilGrids_vrt")
)

```
## 4. Recorte y reproyecci√≥n del stack de SoilGrids

Antes de aplicar reproyecci√≥n o remuestreo, se realiza un recorte del stack original de SoilGrids usando el √°rea de estudio definida por el usuario (ya sea un raster de referencia ‚Äîcomo un DEM‚Äî o un pol√≠gono).

Este paso permite identificar problemas potenciales como valores faltantes (NA) antes de que se apliquen interpolaciones que puedan introducir artefactos.

En el caso de usar un DEM como referencia, se extrae su extensi√≥n y se transforma al sistema de coordenadas nativo de SoilGrids (IGH). Si se usa un pol√≠gono, se transforma directamente a IGH.

El resultado es stack_soil_crop, que conserva la resoluci√≥n original de SoilGrids.

```{r}
## 4. Recorte y verificaci√≥n del stack de SoilGrids (previo a reproyecci√≥n)

# Definir proyecci√≥n IGH usada por SoilGrids (Homos√≠nclinal Mundial)
wkt_igh <- "+proj=igh +lat_0=0 +lon_0=0 +datum=WGS84 +units=m +no_defs"

# Detectar autom√°ticamente si se usar√° el DEM como referencia
usar_raster <- exists("dem")

if (usar_raster) {
  message("Usando raster DEM como referencia espacial.")

  # 1. Extraer la extensi√≥n del DEM como pol√≠gono y asignar CRS expl√≠citamente
  dem_bbox_vect <- as.polygons(ext(dem))
  crs(dem_bbox_vect) <- crs(dem)

  # 2. Transformar bbox al CRS de SoilGrids (IGH)
  dem_bbox_sf   <- st_as_sf(dem_bbox_vect)
  dem_bbox_proj <- st_transform(dem_bbox_sf, wkt_igh) |> vect()

  # 3. Recorte preliminar del stack de SoilGrids (sin reproyectar a√∫n)
  stack_soil_crop <- crop(stack_soil, dem_bbox_proj)

} else {
  message("Usando pol√≠gono como referencia espacial.")

  # 1. Transformar el pol√≠gono al CRS de SoilGrids (IGH)
  poli_estudio_igh  <- st_transform(poli_estudio, wkt_igh)
  poli_estudio_vect <- vect(poli_estudio_igh)

  # 2. Recorte preliminar del stack de SoilGrids (sin reproyectar a√∫n)
  stack_soil_crop <- crop(stack_soil, poli_estudio_vect)
}

# Verificar presencia de NA internos antes de reproyecci√≥n
na_resumen <- global(is.na(stack_soil_crop), "sum", na.rm = FALSE)
print("Celdas NA por capa antes de reproyecci√≥n:")
print(na_resumen)

# Visualizar una capa de textura para inspecci√≥n visual
plot(stack_soil_crop)

```
Diagn√≥stico de valores faltantes

```{r}
# An√°lisis de valores faltantes por capa
na_summary <- global(is.na(stack_soil_crop), fun = "sum", na.rm = FALSE)
print("N√∫mero de celdas NA por capa (previo a reproyecci√≥n):")
print(na_summary)

# Verificar si hay NAs internos
tiene_na <- any(na_summary[] > 0)

if (tiene_na) {
  message("‚ö†Ô∏è  Se detectaron valores faltantes (NA) en el stack recortado.")
} else {
  message("‚úÖ  No se detectaron valores NA en el stack recortado.")
}

```


Una vez validado el recorte preliminar (stack_soil_crop), se procede a reproyectar y alinear espacialmente el stack al √°rea de estudio:

Si se defini√≥ un raster de referencia (e.g., un DEM), se usa su sistema de coordenadas y su grilla para remuestrear y alinear el stack de SoilGrids.

Si se us√≥ un pol√≠gono, se reproyecta el stack al CRS original del pol√≠gono y se aplica una m√°scara para restringir la salida al √°rea de inter√©s.

Antes del remuestreo final, se verifica si el stack reproyectado contiene valores faltantes (NA). Si los hay, se aplica una interpolaci√≥n local por vecinos cercanos, usando la media de una ventana 3√ó3 (filtro focal). Este m√©todo rellena celdas faltantes con el valor medio de sus p√≠xeles vecinos v√°lidos, evitando as√≠ artefactos o huecos en el raster final.

El resultado final es stack_soil_ready, que contiene las capas de SoilGrids ajustadas espacialmente, listas para el c√°lculo del factor de erodabilidad K.


```{r}
## Reproyecci√≥n y alineaci√≥n (solo si se valid√≥ el stack recortado)

if (usar_raster) {
  # Reproyectar al CRS del DEM
  stack_soil_proj <- project(stack_soil_crop, crs(dem), method = "bilinear")

  # Interpolaci√≥n de NA si existen
  na_check <- global(is.na(stack_soil_proj), "sum", na.rm = FALSE)
  if (any(na_check[] > 0)) {
    message("‚ö†Ô∏è  Se detectaron NA despu√©s de reproyecci√≥n. Aplicando interpolaci√≥n local.")
    stack_soil_proj <- focal(stack_soil_proj, w = 3, fun = "mean", na.policy = "only", na.rm = TRUE)
  }

  # Alinear al raster DEM
  stack_soil_ready <- resample(stack_soil_proj, dem, method = "bilinear")

} else {
  # Reproyectar al CRS original del pol√≠gono
  crs_poli <- st_crs(poli_estudio)$wkt
  stack_soil_proj <- project(stack_soil_crop, crs_poli, method = "bilinear")

  # Interpolaci√≥n de NA si existen
  na_check <- global(is.na(stack_soil_proj), "sum", na.rm = FALSE)
  if (any(na_check[] > 0)) {
    message("‚ö†Ô∏è  Se detectaron NA despu√©s de reproyecci√≥n. Aplicando interpolaci√≥n local.")
    stack_soil_proj <- focal(stack_soil_proj, w = 3, fun = "mean", na.policy = "only", na.rm = TRUE)
  }

  # Aplicar m√°scara espacial con el pol√≠gono
  stack_soil_ready <- mask(stack_soil_proj, vect(poli_estudio))
}

```


## 5. Conversi√≥n de unidades y c√°lculo de MO

Las variables descargadas desde SoilGrids est√°n en unidades que no son directamente compatibles con las ecuaciones emp√≠ricas para K. Por ello, se realiza una conversi√≥n previa. Adem√°s, se estima el contenido de materia org√°nica (OM) a partir de SOC, usando el factor de conversi√≥n est√°ndar de Van Bemmelen.

Estas transformaciones permiten que las ecuaciones posteriores calculen el factor K en unidades m√©tricas SI: t¬∑ha‚Åª¬π¬∑h¬∑MJ‚Åª¬π¬∑mm‚Åª¬π, compatibles con InVEST y otros modelos.

```{r}
# Extraer y convertir unidades
sand <- stack_soil_ready[["sand_0-5cm_mean"]] / 10  # g/kg ‚Üí %
silt <- stack_soil_ready[["silt_0-5cm_mean"]] / 10
clay <- stack_soil_ready[["clay_0-5cm_mean"]] / 10
soc  <- stack_soil_ready[["soc_0-5cm_mean"]] / 10  # dg/kg ‚Üí %
bd   <- stack_soil_ready[["bdod_0-5cm_mean"]] / 100  # cg/cm¬≥ ‚Üí g/cm¬≥

# Materia org√°nica a partir de SOC
om <- soc * 1.724
```

## 6. Estimaciones de K

### 6.1 Ecuaci√≥n de Renard et al. (1997) v√≠a Dg.

Esta ecuaci√≥n estima K a partir del **di√°metro geom√©trico medio** (Dg) de las part√≠culas, aplicando una funci√≥n tipo gaussiana. Es adecuada para suelos donde se dispone de textura completa. Fue reportada por Renard et al. (1997): predicting soil erosion by water: a guide to conservation planning with the Revisited Universal Soil Loss Equation (RUSLE)

üìò Acceso: Renard et al. (1997) - [RUSLE Handbook](https://www.tucson.ars.ag.gov/unit/publications/PDFfiles/717.pdf)

```{r}
# Di√°metro medio de cada fracci√≥n (Œºm): arena=1000, limo=26, arcilla=1
log_dg <- (sand * log(1000) + silt * log(26) + clay * log(1)) / 100
dg <- exp(log_dg)

K_renard <- 0.0034 + 0.0405 * exp(-0.5 * ((log(dg) + 1.659) / 0.7101)^2)

plot(K_renard)

writeRaster(K_renard, here::here("RUSLE_SoilGrids", "Data", "OUT_K_renard_dg.tif"), overwrite = TRUE)
```

### 6.2 Ecuaci√≥n de Denardin (1990)

Propone un c√°lculo de K usando una combinaci√≥n de variables texturales: fracciones finas y materia org√°nica. Es ampliamente utilizada en Brasil y recomendada para suelos tropicales. Se ha aplicado en estudios regionales con SoilGrids.

üìò Referencia: Denardin, J.E. (1990). - [Tese Doutorado USO](https://teses.usp.br/teses/disponiveis/11/11140/tde-20230818-145355/pt-br.php)

```{r}
M <- (silt + sand) * (100 - clay)
K_denardin <- 0.0134 + 0.0027 * M / 10000 - 0.00001 * M^2 / 1e8

plot(K_denardin)

writeRaster(K_denardin, here::here("RUSLE_SoilGrids", "Data", "OUT_K_denardin.tif"), overwrite = TRUE)
```

### 6.3 Ecuaci√≥n de Sharpley & Williams (1990) 

Usada originalmente en el modelo EPIC y luego adoptada en SWAT, esta ecuaci√≥n permite estimar K usando arena, limo, arcilla y contenido de carbono. Es una de las m√°s s√≥lidas en t√©rminos estad√≠sticos para regiones sin datos de estructura del suelo.

üìò Referencia: Sharpley, A.N. & Williams, J.R. (1990). [EPIC-Erosion Productivity Impact Calculator](https://epicapex.tamu.edu/media/h2gkyznv/epicmodeldocumentation.pdf)

```{r}
# Subecuaciones seg√∫n Anache et al. (2015), adaptadas de Sharpley & Williams
fcsand <- 0.2 + 0.3 * exp(-0.0256 * sand * (1 - silt / 100))
sl_clay <- silt / (clay + silt)
om_term <- 1 - 0.25 * om / (om + exp(3.72 - 2.95 * om))
K_sw <- fcsand * sl_clay^0.3 * om_term

# Conversi√≥n a unidades SI
K_sw_SI <- K_sw * 0.1317

plot(K_sw_SI)

writeRaster(K_sw_SI, here::here("RUSLE_SoilGrids", "Data","OUT_K_sharpley_williams.tif"), overwrite = TRUE)
```

## 7. Conclusiones

Aumentan K en presencia de limo + materia org√°nica, lo cual refleja la susceptibilidad de estos suelos a la erosi√≥n, especialmente si no hay estructura agregada estabilizada (algo que SoilGrids no informa).

Esto est√° respaldado por estudios como Torri, D., Poesen, J., & Borselli, L. (1997). Predictability and uncertainty of the soil erodibility factor using a global dataset. Catena, 31(1), 1‚Äì22. https://doi.org/10.1016/S0341-8162(97)00036-2

Y visualmente en curvas como esta del RUSLE handbook (Renard et al., 1997), donde K es m√°ximo en suelos con:
35‚Äì70% de limo, <20% de arcilla, materia org√°nica baja-intermedia, y estructura d√©bil o ausente (lo cual no est√° modelado aqu√≠).


